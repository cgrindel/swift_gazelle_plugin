load("@bazel_binaries//:defs.bzl", "bazel_binaries")
load("@cgrindel_bazel_starlib//bzlformat:defs.bzl", "bzlformat_pkg")
load("@cgrindel_bazel_starlib//bzllib:defs.bzl", "lists")
load(
    "@rules_bazel_integration_test//bazel_integration_test:defs.bzl",
    "bazel_integration_tests",
    "integration_test_utils",
)

# Exclude this entire directory from having anything generated by Gazelle. That
# way the test cases won't be fixed by `bazel run //:gazelle` when run in this
# repository.
# gazelle:exclude **

bzlformat_pkg(name = "bzlformat")

sh_binary(
    name = "test_runner",
    testonly = True,
    srcs = ["test_runner.sh"],
    data = [
        "@rules_bazel_integration_test//tools:create_scratch_dir",
    ],
    deps = [
        "@bazel_tools//tools/bash/runfiles",
        "@cgrindel_bazel_starlib//shlib/lib:assertions",
    ],
)

DIR_NAMES = [
    "bzlmod",
    "grpc_example",
    "grpc_package_example",
]

[
    bazel_integration_tests(
        name = dir_name + "_test",
        timeout = "eternal",
        bazel_binaries = bazel_binaries,
        bazel_versions = bazel_binaries.versions.all,
        tags = integration_test_utils.DEFAULT_INTEGRATION_TEST_TAGS + [
            # Avoid file permssion error when using disk and repository cache after
            # 7.0.0rc2 upgrade.
            # https://github.com/bazelbuild/bazel/issues/19908
            "no-sandbox",
        ],
        test_runner = ":test_runner",
        workspace_files = integration_test_utils.glob_workspace_files(dir_name) + [
            "//:runtime_files",
        ],
        workspace_path = dir_name,
    )
    for dir_name in DIR_NAMES
]

test_suite(
    name = "smoke_integration_tests",
    tags = integration_test_utils.DEFAULT_INTEGRATION_TEST_TAGS,
    tests = lists.flatten([
        integration_test_utils.bazel_integration_test_names(
            dir_name + "_test",
            versions = bazel_binaries.versions.all,
        )
        for dir_name in DIR_NAMES
    ]),
    visibility = ["//:__subpackages__"],
)

test_suite(
    name = "all_integration_tests",
    # If you don't apply the test tags to the test suite, the test suite will
    # be found when `bazel test //...` is executed.
    tags = integration_test_utils.DEFAULT_INTEGRATION_TEST_TAGS,
    tests = [
        ":smoke_integration_tests",
    ],
    visibility = ["//:__subpackages__"],
)
