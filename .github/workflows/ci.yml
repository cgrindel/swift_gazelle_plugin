name: Continuous Integration

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: 14 11 * * *

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:

  tidy_and_test_matrix:
    strategy:
      fail-fast: false
      matrix:
        runner:
          - macos-14
          - ubuntu-22.04
    runs-on: ${{ matrix.runner }}
    env:
      CC: clang
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/set_up_ubuntu
        if: ${{ startsWith(matrix.runner, 'ubuntu') }}
        with:
          repo_name: swift_gazelle_plugin
          ubuntu_version: "22.04"
      - uses: ./.github/actions/set_up_macos
        if: ${{ startsWith(matrix.runner, 'macos') }}
        with:
          repo_name: swift_gazelle_plugin
      - uses: ./.github/actions/configure_remote_cache_auth
        with:
          buildbuddy_api_key: ${{ secrets.BUILDBUDDY_API_KEY }}
      - uses: ./.github/actions/tidy_and_test

  integration_test_matrix:
    strategy:
      fail-fast: false
      matrix:
        runner:
          - macos-14
          - ubuntu-22.04
        test_target:
          - '//examples:bzlmod_test_bazel_.bazelversion'
          - '//examples:grpc_example_test_bazel_.bazelversion'
          - '//examples:grpc_package_example_test_bazel_.bazelversion'
          - '//examples:simple_test_bazel_.bazelversion'

    runs-on: ${{ matrix.runner }}
    env:
      CC: clang
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/set_up_ubuntu
        if: ${{ startsWith(matrix.runner, 'ubuntu') }}
        with:
          repo_name: swift_gazelle_plugin
          ubuntu_version: "22.04"
      - uses: ./.github/actions/set_up_macos
        if: ${{ startsWith(matrix.runner, 'macos') }}
        with:
          repo_name: swift_gazelle_plugin
          test_target: ${{ matrix.test }}
      - uses: ./.github/actions/configure_remote_cache_auth
        with:
          buildbuddy_api_key: ${{ secrets.BUILDBUDDY_API_KEY }}
      - uses: ./.github/actions/execute_integration_test
        with:
          test_target: ${{ matrix.test_target }}


  all_ci_tests:
    runs-on: ubuntu-latest
    needs:
      - tidy_and_test_matrix
      - integration_test_matrix
    if: ${{ always() }}
    steps:
      - uses: cgrindel/gha_join_jobs@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

